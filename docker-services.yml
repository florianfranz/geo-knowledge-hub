#
# This file is part of GEO Knowledge Hub.
# Copyright 2020-2021 GEO Secretariat.
#
# GEO Knowledge Hub is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.
#
version: '2.2'
services:
    app:
        build:
            context: ./
            args:
                - ENVIRONMENT=DEV
        image: geo-knowledge-hub
        restart: "unless-stopped"
        environment:
            - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
            - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
            - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
            - "INVENIO_CACHE_TYPE=redis"
            - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
            - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
            - "INVENIO_SEARCH_ELASTIC_HOSTS=['es:9200']"
            - "INVENIO_SECRET_KEY=CHANGE_ME"
            - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://geo-knowledge-hub:geo-knowledge-hub@db/geo-knowledge-hub"
            - "INVENIO_WSGI_PROXIES=2"
            - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
    frontend:
        build: ./docker/nginx/
        image: geo-knowledge-hub-frontend
        restart: "unless-stopped"
        ports:
            - "80"
            - "443"
    cache:
        image: redis
        restart: "unless-stopped"
        read_only: true
        ports:
            - "6379:6379"
    db:
        image: postgres:12.4
        restart: "unless-stopped"
        environment:
            - "POSTGRES_USER=geo-knowledge-hub"
            - "POSTGRES_PASSWORD=geo-knowledge-hub"
            - "POSTGRES_DB=geo-knowledge-hub"
        ports:
            - "5432:5432"
    pgadmin:
        image: dpage/pgadmin4:5.2
        restart: "unless-stopped"
        ports:
            - "5050:80"
            - "5051:443"
        environment:
            PGADMIN_DEFAULT_EMAIL: "mail@mail.org"
            PGADMIN_DEFAULT_PASSWORD: "123456"
    mq:
        image: rabbitmq:3.8-management
        restart: "unless-stopped"
        ports:
            - "15672:15672"
            - "5672:5672"
    es:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
        restart: "unless-stopped"
        environment:
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - discovery.type=single-node
        healthcheck:
            test: ["CMD", "curl", "-f", "localhost:9200/_cluster/health?wait_for_status=green"]
            interval: 30s
            timeout: 30s
            retries: 5
        ulimits:
            memlock:
                soft: -1
                hard: -1
        mem_limit: 1g
        ports:
            - "9200:9200"
            - "9300:9300"
    kibana:
        image: docker.elastic.co/kibana/kibana-oss:7.10.2
        environment:
            - "ELASTICSEARCH_HOSTS=http://es:9200"
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ports:
            - "5601:5601"
    s3:
        image: minio/minio
        restart: "unless-stopped"
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: CHANGE_ME
            MINIO_ROOT_PASSWORD: CHANGE_ME
        volumes:
            - ./data:/data
        command: server /data --console-address :9001
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3
    isso:
        build: ./docker/isso/
        image: geo-knowledge-hub-isso
        restart: "unless-stopped"
        ports:
            - "8080:8080"
